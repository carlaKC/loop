// Code generated by protoc-gen-go. DO NOT EDIT.
// source: debug.proto

package looprpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ForceAutoLoopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForceAutoLoopRequest) Reset()         { *m = ForceAutoLoopRequest{} }
func (m *ForceAutoLoopRequest) String() string { return proto.CompactTextString(m) }
func (*ForceAutoLoopRequest) ProtoMessage()    {}
func (*ForceAutoLoopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{0}
}

func (m *ForceAutoLoopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForceAutoLoopRequest.Unmarshal(m, b)
}
func (m *ForceAutoLoopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForceAutoLoopRequest.Marshal(b, m, deterministic)
}
func (m *ForceAutoLoopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForceAutoLoopRequest.Merge(m, src)
}
func (m *ForceAutoLoopRequest) XXX_Size() int {
	return xxx_messageInfo_ForceAutoLoopRequest.Size(m)
}
func (m *ForceAutoLoopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForceAutoLoopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForceAutoLoopRequest proto.InternalMessageInfo

type ForceAutoLoopResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForceAutoLoopResponse) Reset()         { *m = ForceAutoLoopResponse{} }
func (m *ForceAutoLoopResponse) String() string { return proto.CompactTextString(m) }
func (*ForceAutoLoopResponse) ProtoMessage()    {}
func (*ForceAutoLoopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{1}
}

func (m *ForceAutoLoopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForceAutoLoopResponse.Unmarshal(m, b)
}
func (m *ForceAutoLoopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForceAutoLoopResponse.Marshal(b, m, deterministic)
}
func (m *ForceAutoLoopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForceAutoLoopResponse.Merge(m, src)
}
func (m *ForceAutoLoopResponse) XXX_Size() int {
	return xxx_messageInfo_ForceAutoLoopResponse.Size(m)
}
func (m *ForceAutoLoopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForceAutoLoopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForceAutoLoopResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ForceAutoLoopRequest)(nil), "looprpc.ForceAutoLoopRequest")
	proto.RegisterType((*ForceAutoLoopResponse)(nil), "looprpc.ForceAutoLoopResponse")
}

func init() { proto.RegisterFile("debug.proto", fileDescriptor_8d9d361be58531fb) }

var fileDescriptor_8d9d361be58531fb = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x49, 0x4d, 0x2a,
	0x4d, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0xc9, 0xcf, 0x2f, 0x28, 0x2a, 0x48,
	0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb,
	0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x53, 0x12, 0xe3, 0x12, 0x71, 0xcb,
	0x2f, 0x4a, 0x4e, 0x75, 0x2c, 0x2d, 0xc9, 0xf7, 0xc9, 0xcf, 0x2f, 0x08, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x51, 0x12, 0xe7, 0x12, 0x45, 0x13, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x35, 0x2a,
	0xe5, 0xe2, 0x76, 0x01, 0x59, 0xe3, 0x9c, 0x93, 0x99, 0x9a, 0x57, 0x22, 0x94, 0xc6, 0xc5, 0x8b,
	0xa2, 0x4e, 0x48, 0x56, 0x0f, 0x6a, 0xb1, 0x1e, 0x36, 0x73, 0xa5, 0xe4, 0x70, 0x49, 0x43, 0x8c,
	0x57, 0x12, 0x6b, 0xba, 0xfc, 0x64, 0x32, 0x93, 0x80, 0x10, 0x9f, 0x7e, 0x99, 0xa1, 0x7e, 0x62,
	0x69, 0x49, 0xbe, 0x7e, 0x1a, 0x48, 0x5d, 0x12, 0x1b, 0xd8, 0xb9, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x99, 0x49, 0x09, 0x67, 0xe4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DebugClientClient is the client API for DebugClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugClientClient interface {
	//
	//ForceAutoLoop is intended for *testing purposes only* and will not work on
	//mainnet. This endpoint ticks our autoloop timer, triggering automated
	//dispatch of a swap if one is suggested.
	ForceAutoLoop(ctx context.Context, in *ForceAutoLoopRequest, opts ...grpc.CallOption) (*ForceAutoLoopResponse, error)
}

type debugClientClient struct {
	cc *grpc.ClientConn
}

func NewDebugClientClient(cc *grpc.ClientConn) DebugClientClient {
	return &debugClientClient{cc}
}

func (c *debugClientClient) ForceAutoLoop(ctx context.Context, in *ForceAutoLoopRequest, opts ...grpc.CallOption) (*ForceAutoLoopResponse, error) {
	out := new(ForceAutoLoopResponse)
	err := c.cc.Invoke(ctx, "/looprpc.DebugClient/ForceAutoLoop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugClientServer is the server API for DebugClient service.
type DebugClientServer interface {
	//
	//ForceAutoLoop is intended for *testing purposes only* and will not work on
	//mainnet. This endpoint ticks our autoloop timer, triggering automated
	//dispatch of a swap if one is suggested.
	ForceAutoLoop(context.Context, *ForceAutoLoopRequest) (*ForceAutoLoopResponse, error)
}

// UnimplementedDebugClientServer can be embedded to have forward compatible implementations.
type UnimplementedDebugClientServer struct {
}

func (*UnimplementedDebugClientServer) ForceAutoLoop(ctx context.Context, req *ForceAutoLoopRequest) (*ForceAutoLoopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceAutoLoop not implemented")
}

func RegisterDebugClientServer(s *grpc.Server, srv DebugClientServer) {
	s.RegisterService(&_DebugClient_serviceDesc, srv)
}

func _DebugClient_ForceAutoLoop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceAutoLoopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugClientServer).ForceAutoLoop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/looprpc.DebugClient/ForceAutoLoop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugClientServer).ForceAutoLoop(ctx, req.(*ForceAutoLoopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "looprpc.DebugClient",
	HandlerType: (*DebugClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ForceAutoLoop",
			Handler:    _DebugClient_ForceAutoLoop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "debug.proto",
}
